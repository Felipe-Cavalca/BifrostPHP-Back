# Dockerfile.dev
FROM php:8.3-fpm

# Atualizando pacotes do sistema e instalando dependências necessárias
RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get install -y --no-install-recommends \
        supervisor \
        libpq-dev \
    && docker-php-ext-install pdo_mysql pdo_pgsql \
    && pecl install redis \
    && docker-php-ext-enable redis \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copiando os arquivos da aplicação
COPY ./ /var/www/html

# Configurações do PHP para desenvolvimento (sem opcache)
RUN mkdir -p /usr/local/etc/php/conf.d \
    && echo "upload_max_filesize = 1G" > /usr/local/etc/php/conf.d/bifrost.ini \
    && echo "post_max_size = 1G" >> /usr/local/etc/php/conf.d/bifrost.ini \
    && echo "memory_limit = 1G" >> /usr/local/etc/php/conf.d/bifrost.ini \
    && echo "session.save_path = /var/lib/php/sessions" >> /usr/local/etc/php/conf.d/bifrost.ini

# Instalando e configurando o Xdebug para desenvolvimento
RUN pecl install xdebug \
    && docker-php-ext-enable xdebug \
    && mkdir -p /var/log/xdebug \
    && echo "zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.mode=debug,develop" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.start_with_request=yes" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.client_host=host.docker.internal" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.client_port=9003" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.log=/var/log/xdebug.log" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.log_level=7" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.output_dir=/var/log/xdebug" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.profiler_output_name=callgrind.out.%t" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.profiler_enable_trigger=1" >> /usr/local/etc/php/conf.d/xdebug.ini

# Criando o diretório de sessões e configurando permissões
RUN mkdir -p /var/lib/php/sessions \
    && chown -R www-data:www-data /var/lib/php/sessions

# Copiando a configuração do Supervisor
RUN mkdir -p /var/run/supervisor /var/log/supervisor
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Expõe a porta do PHP-FPM
EXPOSE 9000

# Inicia supervisor para rodar PHP-FPM e o worker
CMD ["/usr/bin/supervisord"]
