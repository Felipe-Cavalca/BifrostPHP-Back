name: Tag on merge

on:
  pull_request:
    types:
      - closed

jobs:
  create_tag_and_draft_release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Draft Release
        id: create_release
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            if (context.payload.pull_request.merged) {
              const { owner, repo } = context.repo
              const prNumber = context.payload.pull_request.number
              const labels = (await github.issues.listLabelsOnIssue({ owner, repo, issue_number: prNumber })).data.map(label => label.name)

              const lastTag = (await github.repos.listTags({ owner, repo })).data.map(tag => tag.name).sort().pop()
              const baseString = lastTag.match(/[\d.]+-\d+/)[0]
              const parts = baseString.split('-')[0].split('.').map(Number)

              // Extract the number from the parentheses in the last tag
              const lastTagNumber = parseInt(lastTag.match(/-(\d+)$/)?.[1])
              const newTagNumber = isNaN(lastTagNumber) ? 1 : lastTagNumber + 1

              console.log(`Last tag: ${lastTag}`)
              console.log(`Base string: ${baseString}`)
              console.log(`Last tag number: ${lastTagNumber}`)
              console.log(`New tag number: ${newTagNumber}`)

              // validates if the PR has the labels 'upgrade'
              if (labels.includes('upgrade')) {
                // case the PR has the label 'upgrade' alters the first part of the tag
                parts[0] += 1
                parts[1] = 0
                parts[2] = 0
              } else {
                if (labels.includes('enhancement')) {
                  // case the PR has the labels 'enhancement' alters the second part of the tag
                  parts[1] += 1
                  parts[2] = 0
                } else if (labels.includes('bug') || labels.includes('documentation')) {
                  // case the PR has the labels 'bug' or 'documentation' alters the third part of the tag
                  parts[2] += 1
                } else {
                  return
                }
              }

              const newTag = `${parts.join('.')}-${newTagNumber}`
              console.log(`New tag: ${newTag}`)
              const tagRef = await github.git.createRef({
                owner,
                repo,
                ref: `refs/tags/${newTag}`,
                sha: context.payload.pull_request.merge_commit_sha,
              })
            }

  update_release_draft:
    needs: create_tag_and_draft_release
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_release:
    needs: update_release_draft
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Publish Release
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { owner, repo } = context.repo
            const releases = await github.repos.listReleases({
              owner,
              repo,
            })

            const draftRelease = releases.data.find(release => release.draft)
            if (draftRelease) {
              const lastTag = (await github.repos.listTags({ owner, repo })).data.map(tag => tag.name).sort().pop()
              await github.repos.updateRelease({
                owner,
                repo,
                release_id: draftRelease.id,
                tag_name: lastTag,
                name: lastTag.trim().replace(/-/g, ' (') + ')',
                draft: false,
                prerelease: true,
              })
            }
